{"version":3,"sources":["components/Header.js","pages/Cart.js","pages/Checkout.js","services/api.js","components/Categories.js","components/FreeShipping.js","components/ProductCard.js","pages/Home.js","components/Reviews.js","components/SendReview.js","pages/ProductPage.js","App.js","index.js"],"names":["Header","cartQnt","this","props","to","className","data-testid","Component","Cart","loadCart","cartItems","JSON","parse","localStorage","getItem","setState","emptyCart","length","state","handleQuantities","handleRemoveItem","productsAndQuantities","map","productName","quantity","btnDisabled","productImg","price","key","type","name","onClick","src","alt","value","disabled","toLocaleString","Checkout","handleChange","target","handleSubmit","ev","preventDefault","submitted","fullname","email","cpf","phone","cep","address","reduce","sum","onSubmit","htmlFor","placeholder","onChange","getCategories","a","fetch","response","json","data","getProductsFromCategoryAndQuery","categoryId","query","url","getProduct","id","Categories","fetchCategories","categoriesList","handleCatClick","FreeShipping","ProductCard","handleCard","history","btnId","push","product","handleAddToCart","title","thumbnail","freeShipping","shipping","free_shipping","Home","search","products","getProducts","Reviews","productId","reviews","filter","review","index","stars","message","Array","Number","fill","_","starI","SendReview","handleSendReview","keys","num","checked","String","rows","ProductPage","newReviews","setItem","stringify","match","params","attributes","Object","valueName","value_name","App","getCartQuant","sumCartQuant","acc","apiResult","results","foundObj","find","objToSave","avlQnt","available_quantity","prevState","productCount","prodAndQuant","curr","count","quantities","values","pAndQ","e","newPnQArray","currentTarget","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a09eb4e4.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { BsCart2 } from 'react-icons/bs';\nimport { GrHomeRounded } from 'react-icons/gr';\nimport { Link, NavLink } from 'react-router-dom';\nimport './Header.css';\n\nclass Header extends Component {\n  render() {\n    const {\n      cartQnt,\n    } = this.props;\n    return (\n      <header>\n        <NavLink to=\"/\"><GrHomeRounded className=\"home-icon\" /></NavLink>\n        <h1>Front-end Online Store</h1>\n        <Link to=\"/cart\" className=\"cart\" data-testid=\"shopping-cart-button\">\n          <BsCart2 className=\"cart-icon\" />\n          <span data-testid=\"shopping-cart-size\" className=\"cart-qnt\">\n            { cartQnt }\n          </span>\n        </Link>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  cartQnt: PropTypes.number.isRequired,\n};\n\nexport default Header;\n","/* eslint-disable react/jsx-max-depth */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { AiOutlineMinusCircle, AiOutlinePlusCircle } from 'react-icons/ai';\nimport { BsTrash } from 'react-icons/bs';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport './Cart.css';\n\nclass Cart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      emptyCart: true,\n    };\n  }\n\n  componentDidMount() {\n    this.loadCart();\n  }\n\n  loadCart = () => {\n    const cartItems = JSON.parse(localStorage.getItem('cartItems'));\n    if (cartItems) {\n      this.setState({\n        emptyCart: !cartItems.length,\n      });\n    }\n  }\n\n  render() {\n    const { emptyCart } = this.state;\n    const {\n      handleQuantities, handleRemoveItem, productsAndQuantities, cartQnt,\n    } = this.props;\n\n    return (\n      <>\n        <Header cartQnt={ cartQnt } />\n        {emptyCart || !productsAndQuantities.length\n          ? (\n            <p\n              data-testid=\"shopping-cart-empty-message\"\n              className=\"empty-message\"\n            >\n              Seu carrinho está vazio\n            </p>\n          )\n          : (\n            <div className=\"full-cart\">\n              <h3>Carrinho</h3>\n              {productsAndQuantities\n                .map(({\n                  productName, quantity, btnDisabled, productImg, price,\n                }) => (\n                  <div className=\"cart-item\" key={ productName }>\n                    <button\n                      type=\"button\"\n                      name={ productName }\n                      onClick={ handleRemoveItem }\n                      className=\"trash-icon\"\n                    >\n                      <BsTrash />\n                    </button>\n                    <div className=\"info-quant\">\n                      <div className=\"img-container\">\n                        <img\n                          src={ productImg }\n                          alt={ productName }\n                          className=\"prod-img\"\n                        />\n                      </div>\n                      <div className=\"product-info\">\n                        <p\n                          data-testid=\"shopping-cart-product-name\"\n                          className=\"product-name\"\n                        >\n                          {productName}\n                        </p>\n                        <div className=\"quantities-board\">\n                          <button\n                            type=\"button\"\n                            data-testid=\"product-decrease-quantity\"\n                            name={ productName }\n                            value=\"decrease\"\n                            onClick={ handleQuantities }\n                            className=\"quantity-icon\"\n                          >\n                            <AiOutlineMinusCircle />\n                          </button>\n                          <div\n                            data-testid=\"shopping-cart-product-quantity\"\n                            className=\"quantity-text\"\n                          >\n                            {quantity}\n                          </div>\n                          <button\n                            type=\"button\"\n                            data-testid=\"product-increase-quantity\"\n                            name={ productName }\n                            value=\"increase\"\n                            onClick={ handleQuantities }\n                            disabled={ btnDisabled }\n                            className=\"quantity-icon\"\n                          >\n                            <AiOutlinePlusCircle />\n                          </button>\n                        </div>\n                      </div>\n                      <div />\n                      <div />\n                      <p\n                        data-testid=\"shopping-cart-product-name\"\n                        className=\"product-price\"\n                      >\n                        {`R$${(price * quantity).toLocaleString('pt-br')}`}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n              <Link\n                to=\"/checkout\"\n                data-testid=\"checkout-products\"\n                className=\"checkout-link\"\n              >\n                Checkout\n              </Link>\n            </div>)}\n      </>\n    );\n  }\n}\n\nCart.propTypes = {\n  productsAndQuantities: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleQuantities: PropTypes.func.isRequired,\n  handleRemoveItem: PropTypes.func.isRequired,\n  cartQnt: PropTypes.number.isRequired,\n};\n\nexport default Cart;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Header from '../components/Header';\nimport './Checkout.css';\n\nclass Checkout extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      fullname: '',\n      email: '',\n      cpf: '',\n      phone: '',\n      cep: '',\n      address: '',\n      submitted: false,\n    };\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (ev) => {\n    ev.preventDefault();\n    this.setState({ submitted: true });\n  };\n\n  render() {\n    const { cartItems } = this.props;\n    const { fullname, email, cpf, phone, cep, address, submitted } = this.state;\n\n    const genCartItems = () => cartItems\n      .map(({ productName, price, quantity, productImg }) => (\n        <div className=\"cart-item checkout-item\" key={ productName }>\n          <div className=\"full-product\">\n            <div className=\"img-container\">\n              <img\n                src={ productImg }\n                alt={ productName }\n                className=\"prod-img\"\n              />\n            </div>\n            <div className=\"product-name\">\n              { productName }\n            </div>\n          </div>\n          <div className=\"product-price\">\n            { `R$${(price * quantity).toLocaleString('pt-br')}` }\n          </div>\n        </div>\n      ));\n\n    const getCartPrice = () => cartItems\n      .reduce((sum, { price, quantity }) => (sum + price * quantity), 0);\n\n    const getCartQuantity = () => cartItems\n      .reduce((sum, { quantity }) => (sum + quantity), 0);\n\n    return (\n      <div>\n        <Header cartQnt={ getCartQuantity() } />\n        {submitted\n          ? (\n            <h1 className=\"purchase-success\">\n              {`${fullname}, parabéns pela sua compra!`}\n            </h1>\n          )\n          : (\n            <div>\n              {!!cartItems.length && (\n                <div className=\"cart-list\">\n                  <h2>Produtos</h2>\n                  <div>\n                    { genCartItems() }\n                  </div>\n                  <h2 className=\"total-price\">\n                    Total:\n                    {' '}\n                    <span>{ `R$${(getCartPrice()).toLocaleString('pt-br')}` }</span>\n                  </h2>\n                </div>\n              )}\n              <form\n                className=\"checkout-form\"\n                onSubmit={ this.handleSubmit }\n              >\n                <h2>Dados Pessoais</h2>\n                <label htmlFor=\"fullname\" className=\"input-label\">\n                  Nome Completo\n                  <input\n                    data-testid=\"checkout-fullname\"\n                    type=\"text\"\n                    name=\"fullname\"\n                    value={ fullname }\n                    placeholder=\"Nome Completo\"\n                    onChange={ this.handleChange }\n                  />\n                </label>\n                <label htmlFor=\"email\" className=\"input-label\">\n                  E-mail\n                  <input\n                    data-testid=\"checkout-email\"\n                    type=\"email\"\n                    name=\"email\"\n                    value={ email }\n                    placeholder=\"E-mail\"\n                    onChange={ this.handleChange }\n                  />\n                </label>\n                <label htmlFor=\"cpf\" className=\"input-label\">\n                  CPF\n                  <input\n                    data-testid=\"checkout-cpf\"\n                    type=\"text\"\n                    name=\"cpf\"\n                    value={ cpf }\n                    placeholder=\"CPF\"\n                    onChange={ this.handleChange }\n                  />\n                </label>\n                <label htmlFor=\"phone\" className=\"input-label\">\n                  Telefone\n                  <input\n                    data-testid=\"checkout-phone\"\n                    type=\"tel\"\n                    name=\"phone\"\n                    value={ phone }\n                    placeholder=\"Telefone\"\n                    onChange={ this.handleChange }\n                  />\n                </label>\n                <label htmlFor=\"cep\" className=\"input-label\">\n                  CEP\n                  <input\n                    data-testid=\"checkout-cep\"\n                    type=\"text\"\n                    name=\"cep\"\n                    value={ cep }\n                    placeholder=\"CEP\"\n                    onChange={ this.handleChange }\n                  />\n                </label>\n                <label htmlFor=\"address\" className=\"input-label\">\n                  Endereço Completo\n                  <input\n                    data-testid=\"checkout-address\"\n                    type=\"text\"\n                    name=\"address\"\n                    value={ address }\n                    placeholder=\"Endereço\"\n                    onChange={ this.handleChange }\n                  />\n                </label>\n                <button className=\"purchase-btn\" type=\"submit\">Comprar</button>\n              </form>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nCheckout.propTypes = {\n  cartItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Checkout;\n","export async function getCategories() {\n  const url = 'https://api.mercadolibre.com/sites/MLB/categories';\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  let url = '';\n  if (categoryId && query) {\n    url = `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`;\n  } else if (!categoryId) {\n    url = `https://api.mercadolibre.com/sites/MLB/search?q=${query}`;\n  } else {\n    url = `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}`;\n  }\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n\nexport async function getProduct(id) {\n  const url = `https://api.mercadolibre.com/items/${id}`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { getCategories } from '../services/api';\n\nclass Categories extends Component {\n  constructor() {\n    super();\n    this.state = {\n      categoriesList: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCategories();\n  }\n\n  fetchCategories = async () => {\n    const categoriesList = await getCategories();\n    this.setState({ categoriesList });\n  }\n\n  render() {\n    const { categoriesList } = this.state;\n    const { handleCatClick } = this.props;\n    return (\n      <aside className=\"categories-cont\">\n        <p\n          className=\"categories-header\"\n        >\n          Categorias\n        </p>\n        <div className=\"all-categories\">\n          {categoriesList.map(({ id, name }) => (\n            <button\n              type=\"button\"\n              key={ id }\n              id={ id }\n              data-testid=\"category\"\n              onClick={ handleCatClick }\n            >\n              {name}\n            </button>\n          ))}\n        </div>\n      </aside>\n    );\n  }\n}\n\nCategories.propTypes = {\n  handleCatClick: PropTypes.func.isRequired,\n};\n\nexport default Categories;\n","import React, { Component } from 'react';\nimport { BsTruck } from 'react-icons/bs';\nimport './FreeShipping.css';\n\nclass FreeShipping extends Component {\n  render() {\n    return (\n      <div className=\"free-shipping\">\n        <BsTruck />\n        <div data-testid=\"free-shipping\">Frete Grátis</div>\n      </div>\n    );\n  }\n}\n\nexport default FreeShipping;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport FreeShipping from './FreeShipping';\nimport './ProductCard.css';\n\nclass ProductCard extends Component {\n  handleCard = () => {\n    const { history, btnId } = this.props;\n    history.push(`/product/${btnId}`);\n  };\n\n  render() {\n    const { product, handleAddToCart, btnId } = this.props;\n    const { title, thumbnail, price, shipping } = product;\n    const freeShipping = shipping.free_shipping;\n\n    return (\n      <div data-testid=\"product\" className=\"product-card\">\n        <Link to={ `/product/${btnId}` } className=\"prod-link\">\n          <img src={ thumbnail } alt={ title } />\n          <div className=\"title\">{ title }</div>\n        </Link>\n        <div>{ `R$${price.toLocaleString('pt-br')}` }</div>\n        { freeShipping && <FreeShipping /> }\n        <button\n          data-testid=\"product-add-to-cart\"\n          type=\"button\"\n          id={ btnId }\n          onClick={ handleAddToCart }\n        >\n          Adicionar ao carrinho\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"product-detail-link\"\n          onClick={ this.handleCard }\n        >\n          Detalhes\n        </button>\n\n      </div>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    thumbnail: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    shipping: PropTypes.shape({\n      free_shipping: PropTypes.bool.isRequired,\n    }),\n  }).isRequired,\n  handleAddToCart: PropTypes.func.isRequired,\n  btnId: PropTypes.string.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default ProductCard;\n","/* eslint-disable react/jsx-max-depth */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { BsSearch } from 'react-icons/bs';\nimport Categories from '../components/Categories';\nimport Header from '../components/Header';\nimport ProductCard from '../components/ProductCard';\nimport './Home.css';\n\nclass Home extends Component {\n  render() {\n    const {\n      history, search, products, handleChange,\n      handleCatClick, handleAddToCart, getProducts, cartQnt,\n    } = this.props;\n    return (\n      <div className=\"home-page\">\n        <Header cartQnt={ cartQnt } />\n        <main>\n          <Categories handleCatClick={ handleCatClick } />\n          <section className=\"main-products\">\n            <div className=\"search-block\">\n              <input\n                type=\"text\"\n                onChange={ handleChange }\n                name=\"search\"\n                value={ search }\n                data-testid=\"query-input\"\n              />\n              <button\n                type=\"button\"\n                data-testid=\"query-button\"\n                onClick={ getProducts }\n              >\n                <BsSearch />\n              </button>\n            </div>\n            {!products.length && (\n              <p\n                data-testid=\"home-initial-message\"\n                className=\"initial-message\"\n              >\n                Digite algum termo de pesquisa ou escolha uma categoria.\n\n              </p>)}\n            <div className=\"products-list\">\n              {products.map((product) => (\n                <ProductCard\n                  key={ product.id }\n                  btnId={ product.id }\n                  product={ product }\n                  handleAddToCart={ handleAddToCart }\n                  history={ history }\n                />\n              ))}\n            </div>\n          </section>\n        </main>\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  search: PropTypes.string.isRequired,\n  handleAddToCart: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleCatClick: PropTypes.func.isRequired,\n  getProducts: PropTypes.func.isRequired,\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  cartQnt: PropTypes.number.isRequired,\n};\n\nexport default Home;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport './Reviews.css';\nimport { AiFillStar } from 'react-icons/ai';\n\nclass Reviews extends Component {\n  render() {\n    const { productId, reviews } = this.props;\n    const genReviews = () => reviews\n      .filter((review) => review.id === productId)\n      .map(({ email, stars, message }, index) => (\n        <div className=\"reviews\" key={ index }>\n          <div className=\"rev-email\">{ email }</div>\n          <div className=\"stars-div\">\n            {Array(Number(stars)).fill()\n              .map((_, starI) => (<AiFillStar key={ starI } />))}\n          </div>\n          <div className=\"message\">{ message }</div>\n        </div>\n      ));\n\n    return (\n      <>\n        <h3 className=\"reviews-title\">Avaliações</h3>\n        {genReviews()}\n      </>\n    );\n  }\n}\n\nReviews.propTypes = {\n  productId: PropTypes.string.isRequired,\n  reviews: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    stars: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\nexport default Reviews;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { AiFillStar, AiOutlineStar } from 'react-icons/ai';\nimport './SendReview.css';\n\nclass SendReview extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      stars: '',\n      message: '',\n    };\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (ev) => {\n    ev.preventDefault();\n    const { productId, handleSendReview } = this.props;\n    const { email, stars, message } = this.state;\n    handleSendReview({ id: productId, email, stars, message });\n    this.setState({ email: '', stars: '', message: '' });\n  };\n\n  render() {\n    const { email, stars, message } = this.state;\n\n    const genStars = () => {\n      const MAX_STARS = 5;\n      const STAR_ARRAY = [...Array(MAX_STARS).keys()].map((num) => num + 1);\n\n      return STAR_ARRAY.map((num) => (\n        <label key={ num } htmlFor={ `${num}-stars` }>\n          <input\n            data-testid={ `${num}-rating` }\n            type=\"radio\"\n            className=\"star-radio\"\n            id={ `${num}-stars` }\n            name=\"stars\"\n            value={ num }\n            checked={ stars === String(num) }\n            onChange={ this.handleChange }\n          />\n          { num <= Number(stars) ? <AiFillStar /> : <AiOutlineStar /> }\n        </label>\n      ));\n    };\n\n    return (\n      <div className=\"send-review\">\n        <h3>Avalie o produto</h3>\n        <form\n          onSubmit={ this.handleSubmit }\n          className=\"review-form\"\n        >\n          <input\n            data-testid=\"product-detail-email\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={ email }\n            onChange={ this.handleChange }\n            className=\"email\"\n          />\n          <div className=\"stars-radio-div\">\n            { genStars() }\n          </div>\n          <textarea\n            data-testid=\"product-detail-evaluation\"\n            name=\"message\"\n            rows={ 5 }\n            placeholder=\"Mensagem (opcional)\"\n            value={ message }\n            onChange={ this.handleChange }\n          />\n          <button\n            data-testid=\"submit-review-btn\"\n            type=\"submit\"\n          >\n            Avaliar\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nSendReview.propTypes = {\n  productId: PropTypes.string.isRequired,\n  handleSendReview: PropTypes.func.isRequired,\n};\n\nexport default SendReview;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport FreeShipping from '../components/FreeShipping';\nimport Header from '../components/Header';\nimport Reviews from '../components/Reviews';\nimport SendReview from '../components/SendReview';\nimport { getProduct } from '../services/api';\nimport './ProductPage.css';\n\nclass ProductPage extends Component {\n  constructor() {\n    super();\n\n    if (!localStorage.getItem('reviews')) localStorage.setItem('reviews', '[]');\n\n    this.state = {\n      product: {},\n      reviews: JSON.parse(localStorage.getItem('reviews')),\n    };\n  }\n\n  async componentDidMount() {\n    const { match: { params: { id } } } = this.props;\n    this.setState({\n      product: await getProduct(id),\n    });\n  }\n\n  handleSendReview = (review) => {\n    const reviews = JSON.parse(localStorage.getItem('reviews'));\n    const newReviews = [...reviews, review];\n    localStorage.setItem('reviews', JSON.stringify(newReviews));\n\n    this.setState({ reviews: newReviews });\n  }\n\n  render() {\n    const { handleAddToCart, cartQnt } = this.props;\n    const {\n      reviews, product, product: { title, thumbnail, price, attributes,\n        shipping = { free_shipping: false }, id: btnId },\n    } = this.state;\n    const freeShipping = shipping.free_shipping;\n\n    return (\n      <>\n        <Header cartQnt={ cartQnt } />\n        {!Object.keys(product).length\n          ? (\n            <div className=\"product-page\" />)\n          : (\n            <div className=\"product-page\">\n              <div className=\"product-title\">\n                <span data-testid=\"product-detail-name\">{ title }</span>\n                <img\n                  src={ thumbnail }\n                  alt={ title }\n                />\n              </div>\n              <span>{ `R$${price.toLocaleString('pt-br')}` }</span>\n              { freeShipping && <FreeShipping /> }\n              <ul>\n                {attributes.map(({ id, name, value_name: valueName }) => (\n                  <li key={ id }>{`${name}: ${valueName}`}</li>\n                ))}\n              </ul>\n              <button\n                data-testid=\"product-detail-add-to-cart\"\n                type=\"button\"\n                id={ btnId }\n                onClick={ handleAddToCart }\n              >\n                Adicionar ao carrinho\n              </button>\n              <SendReview\n                handleSendReview={ this.handleSendReview }\n                productId={ btnId }\n              />\n              <Reviews reviews={ reviews } productId={ btnId } />\n            </div>\n          )}\n      </>\n    );\n  }\n}\n\nProductPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  handleAddToCart: PropTypes.func.isRequired,\n  cartQnt: PropTypes.number.isRequired,\n};\n\nexport default ProductPage;\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Cart from './pages/Cart';\nimport Checkout from './pages/Checkout';\nimport Home from './pages/Home';\nimport ProductPage from './pages/ProductPage';\nimport { getProductsFromCategoryAndQuery } from './services/api';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      search: '',\n      products: [],\n      categoryId: '',\n      cartItems: [],\n      cartQnt: 0,\n    };\n  }\n\n  componentDidMount() {\n    const cartItems = JSON.parse(localStorage.getItem('cartItems'));\n    if (cartItems) {\n      this.setState({\n        cartItems,\n      }, this.productCount);\n    }\n  }\n\n  getCartQuant= () => {\n    const { cartItems } = this.state;\n    const sumCartQuant = cartItems.reduce((acc, { quantity }) => acc + quantity, 0);\n\n    this.setState({ cartQnt: sumCartQuant });\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  getProducts = async () => {\n    const { categoryId, search } = this.state;\n    const apiResult = await getProductsFromCategoryAndQuery(categoryId, search);\n    this.setState({ products: apiResult.results });\n  };\n\n  handleCatClick = ({ target: { id } }) => {\n    this.setState({\n      categoryId: id,\n    }, this.getProducts);\n  }\n\n  handleAddToCart = ({ target: { id } }) => {\n    const { products } = this.state;\n    const foundObj = products.find((product) => product.id === id);\n    const objToSave = {\n      productImg: foundObj.thumbnail,\n      productName: foundObj.title,\n      price: foundObj.price,\n      quantity: 1,\n      avlQnt: foundObj.available_quantity,\n      btnDisabled: false,\n    };\n    this.setState((prevState) => ({\n      cartItems: [...prevState.cartItems, objToSave],\n    }), this.productCount);\n  }\n\n  productCount = () => {\n    const { cartItems } = this.state;\n    const prodAndQuant = cartItems\n      .reduce((acc, curr) => {\n        const { productName, avlQnt, price, quantity, productImg } = curr;\n        if (acc[productName]) {\n          acc[productName].count += quantity;\n        } else {\n          acc[productName] = {\n            count: quantity,\n            avlQnt,\n            price,\n            productImg,\n          };\n        }\n        return acc;\n      }, {});\n\n    const products = Object.keys(prodAndQuant);\n    const quantities = Object.values(prodAndQuant);\n    const pAndQ = products.map((productName, index) => ({\n      productName,\n      productImg: quantities[index].productImg,\n      quantity: quantities[index].count,\n      avlQnt: quantities[index].avlQnt,\n      price: quantities[index].price,\n      btnDisabled: quantities[index].count === quantities[index].avlQnt,\n    }));\n\n    localStorage.setItem('cartItems', JSON.stringify(pAndQ));\n\n    this.setState({\n      cartItems: pAndQ,\n    }, this.getCartQuant);\n  }\n\n  handleQuantities = (e) => {\n    const { currentTarget: { value, name } } = e;\n    let newPnQArray = [];\n    const { cartItems } = this.state;\n    newPnQArray = cartItems\n      .reduce((acc, { productName, quantity, avlQnt, productImg, price }) => {\n        if (productName === name) {\n          if (value === 'increase') {\n            acc = [...acc, {\n              productName,\n              productImg,\n              quantity: quantity + 1,\n              price,\n              avlQnt,\n              btnDisabled: (quantity + 1) === avlQnt,\n            }];\n          } else if (quantity === 1) {\n            this.handleRemoveItem(e);\n          } else {\n            acc = [...acc, {\n              productName,\n              productImg,\n              quantity: quantity - 1,\n              avlQnt,\n              price,\n              btnDisabled: quantity - 1 === avlQnt,\n            }];\n          }\n        } else {\n          acc = [...acc, {\n            productName,\n            productImg,\n            quantity,\n            avlQnt,\n            price,\n            btnDisabled: quantity === avlQnt,\n          }];\n        }\n        return acc;\n      }, []);\n    this.setState({ cartItems: newPnQArray }, this.productCount);\n  }\n\n  handleRemoveItem = ({ currentTarget: { name } }) => {\n    const { cartItems } = this.state;\n    const newPnQArray = cartItems.reduce((acc, curr) => {\n      if (curr.productName !== name) {\n        return [...acc, curr];\n      }\n      return acc;\n    }, []);\n    this.setState({\n      cartItems: newPnQArray,\n    }, this.productCount);\n  }\n\n  render() {\n    const { search, products, cartItems, cartQnt } = this.state;\n\n    return (\n      <HashRouter>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={ (props) => (\n              <Home\n                { ...props }\n                handleChange={ this.handleChange }\n                handleCatClick={ this.handleCatClick }\n                handleAddToCart={ this.handleAddToCart }\n                getProducts={ this.getProducts }\n                search={ search }\n                products={ products }\n                cartQnt={ cartQnt }\n              />\n            ) }\n          />\n          <Route\n            path=\"/cart\"\n            render={ (props) => (<Cart\n              { ...props }\n              productsAndQuantities={ cartItems }\n              handleQuantities={ this.handleQuantities }\n              handleRemoveItem={ this.handleRemoveItem }\n              cartQnt={ cartQnt }\n            />) }\n          />\n          <Route\n            path=\"/product/:id\"\n            render={ (props) => (<ProductPage\n              { ...props }\n              handleAddToCart={ this.handleAddToCart }\n              cartQnt={ cartQnt }\n            />) }\n          />\n          <Route\n            path=\"/checkout\"\n            render={ (props) => (<Checkout\n              { ...props }\n              cartItems={ cartItems }\n            />) }\n          />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}